name: 'FRONTEND Build and Deploy to GKE'

on:
  push:
    branches:
      - 'main'
    paths:
      - 'frontend/**'
      - 'k8s/base/**'
      - '.github/workflows/gke-frontend.yml'

jobs:
  setup-build-publish-deploy:
    env:
      PROJECT_ID: '${{ secrets.PROJECT_ID }}'
      GAR_LOCATION: 'asia-southeast2'
      GKE_CLUSTER: 'ielts-cluster'
      GKE_ZONE: 'asia-southeast2'
      DEPLOYMENT_NAME_1: 'ielts-frontend'
      REPOSITORY: 'ielts-repo'
      WORKLOAD_IDENTITY_PROVIDER: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'

    name: 'FRONTEND Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: 'github-wif@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

      - name: 'Setup gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: 'Set up GKE credentials and Install GKE gcloud auth plugin'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          location: '${{ env.GKE_ZONE }}'
          project_id: '${{ env.PROJECT_ID }}'

      - name: 'Install gcloud components'
        run: |
          set -x
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
          gcloud components update
          gcloud components install gke-gcloud-auth-plugin
      - name: 'Create Kubernetes Secret/Config'
        run: |
          kubectl create secret generic secrets \
            --from-literal=MONGODB_URI="${{ secrets.MONGODB_URI }}" \
            --from-literal=IELTS_HUGGINGFACE_API_KEY="${{ secrets.IELTS_HUGGINGFACE_API_KEY }}" \
            --from-literal=OLLAMA_URL="${{ secrets.OLLAMA_URL }}" \
            --from-literal=MAX_RETRIES="${{ secrets.MAX_RETRIES }}" \
            --from-literal=RETRY_DELAY="${{ secrets.RETRY_DELAY }}" \
            --from-literal=GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" \
            --from-literal=GEMINI_API_KEY_2="${{ secrets.GEMINI_API_KEY_2 }}" \
            --from-literal=GEMINI_API_KEY_3="${{ secrets.GEMINI_API_KEY_3 }}" \
            --from-literal=BAND_DISCRIPTIOR_FILE="${{ secrets.BAND_DISCRIPTIOR_FILE }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: 'Build and push Docker containers'
        run: |-
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev
          export DOCKER_BUILDKIT=1
          export BUILDKIT_PROGRESS=plain
          FRONTEND_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/ielts-frontend:latest"
          echo "Building frontend container: $FRONTEND_TAG"
          docker build -f frontend/Dockerfile.frontend --tag "${FRONTEND_TAG}" frontend/
          docker push "${FRONTEND_TAG}"

      - name: 'Deploy to GKE'
        run: |-
          set -x
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
          FRONTEND_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/ielts-frontend:latest"
          sed -i "s|image: frontend_image|image: ${FRONTEND_TAG}|" k8s/base/deployment.yaml
          kubectl apply -f k8s/base/deployment.yaml
          kubectl apply -f k8s/base/service.yaml
          kubectl rollout restart deployment/${{ env.DEPLOYMENT_NAME_1 }}
