name: 'OLLAMA MODEL Build and Deploy to GKE'

on:
  push:
    branches:
      - 'main'
    paths:
      - 'ollama-custom/**'   # Trigger when changes are made in the ollama directory
      - '.github/workflows/gke-ollama.yml'

jobs:
  setup-build-publish-deploy:
    env:
      PROJECT_ID: '${{ secrets.PROJECT_ID }}'  # TODO: update to your Google Cloud project ID
      GAR_LOCATION: 'asia-southeast2'  # TODO: update to your region
      GKE_CLUSTER: 'ielts-cluster'  # TODO: update to your cluster name
      GKE_ZONE: 'asia-southeast2'  # TODO: update to your cluster zone
      DEPLOYMENT_NAME_1: 'ielts-backend'  # TODO: update to your deployment name
      DEPLOYMENT_NAME_2: 'ielts-ollama-custom'  # TODO: update to your deployment name
      REPOSITORY: 'ielts-repo'  # TODO: update to your Artifact Registry docker repository name
      WORKLOAD_IDENTITY_PROVIDER: '${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}'
    name: 'OLLAMA MODEL Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # Checkout code
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # Authenticate to Google Cloud using Workload Identity Federation (no key secret needed)
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: 'github-wif@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

      # Setup gcloud CLI (it will use credentials from the above auth step)
      - name: 'Setup gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v1'
      # Authenticate Docker to Google Cloud Artifact Registry
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'  # Ensure this outputs the correct token
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
      # Set up GKE credentials and Install the gke-gcloud-auth-plugin for Kubernetes authentication
      - name: 'Set up GKE credentials and Install GKE gcloud auth plugin'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          location: '${{ env.GKE_ZONE }}'
          project_id: '${{ env.PROJECT_ID }}'
      # Enable command tracing for debugging
      - run: |
          set -x  # Enable command tracing for debugging
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
          gcloud components update
          gcloud components install gke-gcloud-auth-plugin
      # Build and push Docker containers for all three services
      - name: 'Build and push Docker containers'
        run: |-
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev
          export DOCKER_BUILDKIT=1
          export BUILDKIT_PROGRESS=plain
          BACKEND_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/ielts-backend:latest"
          OLLAMA_TAG="${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/ielts-ollama-custom:latest"

      
          # Set your build arguments
          echo "Building database container: $OLLAMA_TAG"
          docker build -f ollama/Dockerfile.ollama --tag "${OLLAMA_TAG}" ollama/
          docker push "${OLLAMA_TAG}"